// Code generated by MockGen. DO NOT EDIT.
// Source: libvault.go
//
// Generated by this command:
//
//	mockgen -source libvault.go -package mocks -destination mocks/mocks.go
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	api "github.com/hashicorp/vault/api"
	gomock "go.uber.org/mock/gomock"
)

// MockstdVaultLogicAccessor is a mock of stdVaultLogicAccessor interface.
type MockstdVaultLogicAccessor struct {
	ctrl     *gomock.Controller
	recorder *MockstdVaultLogicAccessorMockRecorder
	isgomock struct{}
}

// MockstdVaultLogicAccessorMockRecorder is the mock recorder for MockstdVaultLogicAccessor.
type MockstdVaultLogicAccessorMockRecorder struct {
	mock *MockstdVaultLogicAccessor
}

// NewMockstdVaultLogicAccessor creates a new mock instance.
func NewMockstdVaultLogicAccessor(ctrl *gomock.Controller) *MockstdVaultLogicAccessor {
	mock := &MockstdVaultLogicAccessor{ctrl: ctrl}
	mock.recorder = &MockstdVaultLogicAccessorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockstdVaultLogicAccessor) EXPECT() *MockstdVaultLogicAccessorMockRecorder {
	return m.recorder
}

// Read mocks base method.
func (m *MockstdVaultLogicAccessor) Read(path string) (*api.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Read", path)
	ret0, _ := ret[0].(*api.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Read indicates an expected call of Read.
func (mr *MockstdVaultLogicAccessorMockRecorder) Read(path any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Read", reflect.TypeOf((*MockstdVaultLogicAccessor)(nil).Read), path)
}
